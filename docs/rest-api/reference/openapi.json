{
  "openapi": "3.0.0",
  "info": { "title": "MagicBell REST API", "version": "1.0" },
  "servers": [
    {
      "url": "https://api.magicbell.com",
      "description": "MagicBell REST API Base URL"
    }
  ],
  "paths": {
    "/notifications": {
      "post": {
        "operationId": "create-notification",
        "tags": ["Notification Send API", "real-time"],
        "summary": "Create notifications",
        "description": "Send a notification to one or multiple users. You can identify users by their email address or by an external_id.\n\nYou don't have to import your users into MagicBell. If a user does not exist we'll create it automatically.\n\nYou can send user attributes like first_name, custom_attributes, and more when creating a notification.\n\nThe new notification will be shown in the notification inbox of each recipient in real-time. It will also be delivered to each recipient through all channels your have enabled for your MagicBell project.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          { "$ref": "#/components/parameters/x_magicbell_api_secret_header" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WrappedNotification" },
              "example": {
                "notification": {
                  "title": "We're processing your order",
                  "content": "<p>Thank you for your order. We'll notify you when these items are ready.</p>",
                  "category": "order_created",
                  "topic": "order:33098",
                  "recipients": [
                    { "email": "dan@example.com" },
                    {
                      "external_id": "83d987a-83fd034",
                      "first_name": "Hana",
                      "last_name": "Mohan",
                      "custom_attributes": {
                        "plan": "enterprise",
                        "pricing_version": "v10",
                        "preferred_pronoun": "She"
                      },
                      "phone_numbers": ["+15005550001"]
                    },
                    { "matches": "custom_attributes.order.id = 88492" }
                  ],
                  "overrides": {
                    "email": {
                      "title": "[MagicBell] We're processing your order",
                      "content": "Thank you for your order. If you need help, or have any questions please don't hesitate to reach out to us directly at hello@magicbell.com"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notification": {
                      "$ref": "#/components/schemas/CreatedNotificationBroadcast"
                    }
                  }
                },
                "example": {
                  "notification": {
                    "id": "ffffff66-ea4f-4da2-afc6-84148b51657a",
                    "title": "We're processing your order",
                    "content": "<p>Thank you for your order. We'll notify you when these items are ready.</p>",
                    "action_url": null,
                    "category": "order_created",
                    "topic": "order:33098",
                    "custom_attributes": null,
                    "sent_at": 1625853246
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "description": "List of validation errors"
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Param 'notification.title' is missing"
                    },
                    {
                      "message": "Param 'notification.recipients' is missing"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["User Notifications APIs"],
        "summary": "Fetch notifications",
        "description": "Fetch a user's notifications. Notifications are sorted in descendent order by the sent_at timestamp.",
        "operationId": "get-notifications",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          {
            "$ref": "#/components/parameters/x_magicbell_user_external_id_header"
          },
          {
            "$ref": "#/components/parameters/x_magicbell_user_email_header"
          },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" },
          {
            "in": "query",
            "name": "per_page",
            "schema": { "type": "integer" },
            "description": "A limit on the number of notifications to be returned. It can range between 1 and 100, and the default is 15."
          },
          {
            "in": "query",
            "name": "page",
            "schema": { "type": "integer" },
            "description": "A parameter for use in pagination. Defaults to 1."
          },
          {
            "in": "query",
            "name": "read",
            "schema": { "type": "boolean" },
            "description": "A filter on the notifications based on the read state. If false, only unread notifications will be returned. Defaults to null."
          },
          {
            "in": "query",
            "name": "seen",
            "schema": { "type": "boolean" },
            "description": "A filter on the notifications based on the seen state. If false, only unseen notifications will be returned. Defaults to null."
          },
          {
            "in": "query",
            "name": "archived",
            "schema": { "type": "boolean" },
            "description": "A filter on the notifications based on the archived state. If false, only unarchived notifications will be returned. Defaults to null."
          },
          {
            "in": "query",
            "name": "categories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A filter on the notifications based on the category. If you want to get uncategorized notifications, use the \"uncategorized\" value.\nThe value can be either an array of strings or a comma-separated string."
          },
          {
            "in": "query",
            "name": "topics",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "A filter on the notifications based on the topic."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Notifications" },
                "example": {
                  "project_id": 83,
                  "unseen_count": 1,
                  "unread_count": 2,
                  "total": 2,
                  "total_pages": 1,
                  "per_page": 15,
                  "current_page": 1,
                  "notifications": [
                    {
                      "id": "7fb3ce9f-a866-4dff-8ce8-2f64f7c5ed4c",
                      "title": "Pickup Instructions â€“ In-Store",
                      "action_url": "https://magicbell.com/pricing",
                      "content": "<ul><li>Bring your valid government-issued photo ID.</li></ul>",
                      "category": "order_ready",
                      "topic": "order:33098",
                      "custom_attributes": {
                        "order_number": "W846MD",
                        "part_number": "MRJL74/C"
                      },
                      "recipient": {
                        "id": "dd1502be-1d07-4906-8217-38dbe4c6ea6b",
                        "email": "dan@example.com",
                        "external_id": null,
                        "last_name": null,
                        "custom_attributes": {}
                      },
                      "seen_at": null,
                      "sent_at": 1601549080,
                      "read_at": null,
                      "archived_at": 1625852784
                    },
                    {
                      "id": "6ed53e8e-0b07-4354-8b56-44ea3ea0816c",
                      "title": "[Billing] Action required to prevent account suspension",
                      "action_url": "https://magicbell.com",
                      "content": "Unfortunately we were unable to automatically renew your account. It looks like we had trouble processing your credit card.",
                      "category": "billing",
                      "topic": null,
                      "custom_attributes": {
                        "sender": {
                          "name": "George Taylor",
                          "email": "george_t@example.com"
                        }
                      },
                      "recipient": {
                        "id": "dd1502be-1d07-4906-8217-38dbe4c6ea6b",
                        "email": "dan@example.com",
                        "external_id": null,
                        "first_name": null,
                        "last_name": null,
                        "custom_attributes": {}
                      },
                      "seen_at": 1601388747,
                      "sent_at": 1601388730,
                      "read_at": null,
                      "archived_at": 1625852012
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{notification_id}": {
      "get": {
        "tags": ["User Notifications APIs"],
        "summary": "Fetch a notification",
        "operationId": "get-notification",
        "description": "Fetch a user's notification by its ID.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          {
            "$ref": "#/components/parameters/x_magicbell_user_external_id_header"
          },
          {
            "$ref": "#/components/parameters/x_magicbell_user_email_header"
          },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" },
          { "$ref": "#/components/parameters/notification_id" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrappedNotification"
                },
                "example": {
                  "notification": {
                    "id": "7fb3ce9f-a866-4dff-8ce8-2f64f7c5ed4c",
                    "title": "Your Check-in Window to pick up Order W771201863",
                    "action_url": "https://magicbell.com/blog/notification-system-design",
                    "content": "<p>We look forward to seeing you during your Check-in Window. Please bring your valid government-issued photo ID.</p>",
                    "category": "order_ready",
                    "topic": "order:33098",
                    "custom_attributes": {
                      "encoding": "utf-8",
                      "word_count": "500"
                    },
                    "recipient": {
                      "id": "dd1502be-1d07-4906-8217-38dbe4c6ea6b",
                      "email": "dan@example.com",
                      "external_id": null,
                      "first_name": null,
                      "last_name": null,
                      "custom_attributes": {}
                    },
                    "seen_at": null,
                    "sent_at": 1601549080,
                    "read_at": null,
                    "archived_at": 1625852784
                  }
                }
              }
            }
          },
          "404": {
            "description": "The notification is not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "A notification with the the given id doesn't exist"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User Notifications APIs", "real-time"],
        "summary": "Delete a notification",
        "description": "Delete a user's notification by its ID. The notification is deleted immediately and removed from the user's notification inbox in real-time.",
        "operationId": "delete-notification",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          {
            "$ref": "#/components/parameters/x_magicbell_user_external_id_header"
          },
          {
            "$ref": "#/components/parameters/x_magicbell_user_email_header"
          },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" },
          { "$ref": "#/components/parameters/notification_id" }
        ],
        "responses": {
          "204": { "description": "User notification delete successfully" },
          "404": {
            "description": "User notification not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "A notification with the the given id doesn't exist"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{notification_id}/read": {
      "post": {
        "operationId": "mark-user-notification-as-read",
        "tags": ["User Notification Actions APIs", "real-time"],
        "summary": "Mark a notification as read",
        "description": "Mark a user notification as read. The notification will be automatically marked as seen, too.\n\nThe new state will be reflected in the user's notification inbox in real-time.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          {
            "$ref": "#/components/parameters/x_magicbell_user_external_id_header"
          },
          {
            "$ref": "#/components/parameters/x_magicbell_user_email_header"
          },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" },
          { "$ref": "#/components/parameters/notification_id" }
        ],
        "responses": {
          "204": {
            "description": "User notification marked as read"
          },
          "404": {
            "description": "The notification is not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "A notification_read with the the given id doesn't exist"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{notification_id}/unread": {
      "post": {
        "operationId": "mark-user-notification-as-unread",
        "tags": ["User Notification Actions APIs", "real-time"],
        "summary": "Mark a notification as unread",
        "description": "Mark a user notification as unread. The new state will be reflected in the user's notification inbox in real-time.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          {
            "$ref": "#/components/parameters/x_magicbell_user_external_id_header"
          },
          {
            "$ref": "#/components/parameters/x_magicbell_user_email_header"
          },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" },
          { "$ref": "#/components/parameters/notification_id" }
        ],
        "responses": {
          "204": {
            "description": "User notification marked as unread"
          },
          "404": {
            "description": "The notification is not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "A notification_read with the the given id doesn't exist"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{notification_id}/archive": {
      "post": {
        "operationId": "archive-notification",
        "tags": ["User Notification Actions APIs", "real-time"],
        "summary": "Archive a notification",
        "description": "Mark a user notification as archived.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          {
            "$ref": "#/components/parameters/x_magicbell_user_external_id_header"
          },
          {
            "$ref": "#/components/parameters/x_magicbell_user_email_header"
          },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" },
          { "$ref": "#/components/parameters/notification_id" }
        ],
        "responses": {
          "204": {
            "description": "User notification marked as archived"
          },
          "404": {
            "description": "The notification is not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "A notification_archive with the the given id doesn't exist"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "unarchive-notification",
        "tags": ["User Notification Actions APIs", "real-time"],
        "summary": "Unarchive a notification",
        "description": "Mark a user notification as unarchived.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          {
            "$ref": "#/components/parameters/x_magicbell_user_external_id_header"
          },
          {
            "$ref": "#/components/parameters/x_magicbell_user_email_header"
          },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" },
          { "$ref": "#/components/parameters/notification_id" }
        ],
        "responses": {
          "204": {
            "description": "User notification marked as unarchived"
          },
          "404": {
            "description": "The notification is not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "A notification_archive with the the given id doesn't exist"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notifications/read": {
      "post": {
        "operationId": "mark-a-users-notification-as-read",
        "tags": ["User Notification Actions APIs", "real-time"],
        "summary": "Mark all notifications as read",
        "description": "Mark all notifications of a user as read. When you call this endpoint, the notification inboxes of this user will be updated in real-time.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          {
            "$ref": "#/components/parameters/x_magicbell_user_external_id_header"
          },
          {
            "$ref": "#/components/parameters/x_magicbell_user_email_header"
          },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" }
        ],
        "responses": {
          "204": {
            "description": "All notifications of the user marked as read"
          }
        }
      }
    },
    "/notifications/seen": {
      "post": {
        "operationId": "mark-a-users-notification-as-seen",
        "tags": ["User Notification Actions APIs", "real-time"],
        "summary": "Mark all notifications as seen",
        "description": "Mark all notifications of a user as seen. When you call this endpoint, the notification inboxes of this user will be updated in real-time.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          {
            "$ref": "#/components/parameters/x_magicbell_user_external_id_header"
          },
          {
            "$ref": "#/components/parameters/x_magicbell_user_email_header"
          },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" }
        ],
        "responses": {
          "204": {
            "description": "All notifications of the user marked as seen"
          }
        }
      }
    },
    "/users": {
      "post": {
        "operationId": "create-user",
        "tags": ["Users APIs"],
        "summary": "Create a user",
        "description": "Create a user. Please note that you must provide the user's email or the external id so MagicBell can uniquely identify the user.\n\nThe external id, if provided, must be unique to the user.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          { "$ref": "#/components/parameters/x_magicbell_api_secret_header" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WrappedUser" },
              "example": {
                "user": {
                  "external_id": "56780",
                  "email": "hana@supportbee.com",
                  "first_name": "Hana",
                  "last_name": "Mohan",
                  "custom_attributes": {
                    "plan": "enterprise",
                    "pricing_version": "v10",
                    "preferred_pronoun": "She"
                  },
                  "phone_numbers": ["+15005550001"]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WrappedUser" },
                "example": {
                  "user": {
                    "id": "7fb3ce9f-a866-4dff-8ce8-2f64f7c5ed4c",
                    "external_id": "56780",
                    "email": "hana@supportbee.com",
                    "first_name": "Hana",
                    "last_name": "Mohan",
                    "custom_attributes": {
                      "plan": "enterprise",
                      "pricing_version": "v10",
                      "preferred_pronoun": "She"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "Param 'user' must have an external id or an email so MagicBell can uniquely identify the user"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "put": {
        "operationId": "update-user",
        "tags": ["Users APIs"],
        "summary": "Update a user",
        "description": "Update a user's data. If you identify users by their email addresses, you need to update the MagicBell data, so this user can still access their notifications.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          { "$ref": "#/components/parameters/x_magicbell_api_secret_header" },
          {
            "in": "path",
            "name": "user_id",
            "description": "The user id is the MagicBell user id. Alternatively, provide an id like `email:theusersemail@example.com` or `external_id:theusersexternalid` as the user id.",
            "required": true,
            "schema": { "type": "string", "minimum": 1 }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WrappedUser" },
              "example": {
                "user": { "email": "hana@magicbell.io" }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WrappedUser" },
                "example": {
                  "user": {
                    "id": "7fb3ce9f-a866-4dff-8ce8-2f64f7c5ed4c",
                    "external_id": "56780",
                    "email": "hana@magicbell.io",
                    "first_name": "Hana",
                    "last_name": "Mohan",
                    "custom_attributes": {
                      "plan": "enterprise",
                      "pricing_version": "v10",
                      "preferred_pronoun": "She"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "Param 'notification_preferences.categories' is missing"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "A user with the the given id doesn't exist"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-user",
        "tags": ["Users APIs"],
        "summary": "Delete a user",
        "description": "Immediately deletes a user.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          { "$ref": "#/components/parameters/x_magicbell_api_secret_header" },
          {
            "in": "path",
            "name": "user_id",
            "description": "The user id is the MagicBell user id. Alternatively, provide an id like `email:theusersemail@example.com` or `external_id:theusersexternalid` as the user id.",
            "required": true,
            "schema": { "type": "string", "minimum": 1 }
          }
        ],
        "responses": {
          "204": { "description": "OK" },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "A user with the the given id doesn't exist"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/email:{user_email}": {
      "put": {
        "operationId": "update-user-by-email",
        "tags": ["Users APIs"],
        "summary": "Update a user by email",
        "description": "Update a user's data. If you identify users by their email addresses, you need to update the MagicBell data, so this user can still access their notifications.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          { "$ref": "#/components/parameters/x_magicbell_api_secret_header" },
          {
            "in": "path",
            "name": "user_email",
            "required": true,
            "schema": { "type": "string", "minimum": 1 }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WrappedUser" },
              "example": {
                "user": {
                  "external_id": "56780",
                  "email": "hana@supportbee.com",
                  "first_name": "Hana",
                  "last_name": "Mohan",
                  "custom_attributes": {
                    "plan": "enterprise",
                    "pricing_version": "v10",
                    "preferred_pronoun": "She"
                  },
                  "phone_numbers": ["+15005550001"]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WrappedUser" },
                "example": {
                  "user": {
                    "id": "7fb3ce9f-a866-4dff-8ce8-2f64f7c5ed4c",
                    "external_id": "56780",
                    "email": "hana@magicbell.io",
                    "first_name": "Hana",
                    "last_name": "Mohan",
                    "custom_attributes": {
                      "plan": "enterprise",
                      "pricing_version": "v10",
                      "preferred_pronoun": "She"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "Param 'notification_preferences.categories' is missing"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "A user with the the given id doesn't exist"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-user-by-email",
        "tags": ["Users APIs"],
        "summary": "Delete a user by email",
        "description": "Immediately deletes a user.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          { "$ref": "#/components/parameters/x_magicbell_api_secret_header" },
          {
            "in": "path",
            "name": "user_email",
            "required": true,
            "schema": { "type": "string", "minimum": 1 }
          }
        ],
        "responses": {
          "204": { "description": "OK" },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "A user with the the given id doesn't exist"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/external_id:{external_id}": {
      "put": {
        "operationId": "update-user-by-external-id",
        "tags": ["Users APIs"],
        "summary": "Update a user by external ID",
        "description": "Update a user's data. If you identify users by their email addresses, you need to update the MagicBell data, so this user can still access their notifications.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          { "$ref": "#/components/parameters/x_magicbell_api_secret_header" },
          {
            "in": "path",
            "name": "external_id",
            "required": true,
            "schema": { "type": "string", "minimum": 1 }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WrappedUser" },
              "example": {
                "user": {
                  "external_id": "56780",
                  "email": "hana@supportbee.com",
                  "first_name": "Hana",
                  "last_name": "Mohan",
                  "custom_attributes": {
                    "plan": "enterprise",
                    "pricing_version": "v10",
                    "preferred_pronoun": "She"
                  },
                  "phone_numbers": ["+15005550001"]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/WrappedUser" },
                "example": {
                  "user": {
                    "id": "7fb3ce9f-a866-4dff-8ce8-2f64f7c5ed4c",
                    "external_id": "56780",
                    "email": "hana@magicbell.io",
                    "first_name": "Hana",
                    "last_name": "Mohan",
                    "custom_attributes": {
                      "plan": "enterprise",
                      "pricing_version": "v10",
                      "preferred_pronoun": "She"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "Param 'notification_preferences.categories' is missing"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "A user with the the given id doesn't exist"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-user-by-external-id",
        "tags": ["Users APIs"],
        "summary": "Delete a user by external ID",
        "description": "Immediately deletes a user.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          { "$ref": "#/components/parameters/x_magicbell_api_secret_header" },
          {
            "in": "path",
            "name": "external_id",
            "required": true,
            "schema": { "type": "string", "minimum": 1 }
          }
        ],
        "responses": {
          "204": { "description": "OK" },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "A user with the the given id doesn't exist"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notification_preferences": {
      "get": {
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          {
            "$ref": "#/components/parameters/x_magicbell_user_external_id_header"
          },
          {
            "$ref": "#/components/parameters/x_magicbell_user_email_header"
          },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" }
        ],
        "tags": ["User notification preference APIs"],
        "summary": "Fetch user notification preferences",
        "description": "Fetch a user's notification preferences. If a user does not disable a channel explicitly, we would send notifications through that channel as long as your project is enabled.",
        "operationId": "get-preferences",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrappedNotificationPreferences"
                },
                "example": {
                  "notification_preferences": {
                    "categories": [
                      {
                        "slug": "billing",
                        "label": "Billing",
                        "channels": [
                          {
                            "slug": "email",
                            "label": "Email",
                            "enabled": true
                          },
                          {
                            "slug": "web_push",
                            "label": "Web Push",
                            "enabled": false
                          },
                          {
                            "slug": "mobile_push",
                            "label": "Mobile Push",
                            "enabled": false
                          }
                        ]
                      },
                      {
                        "slug": "new_reply",
                        "label": "New reply",
                        "channels": [
                          {
                            "slug": "email",
                            "label": "Email",
                            "enabled": true
                          },
                          {
                            "slug": "web_push",
                            "label": "Web Push",
                            "enabled": true
                          },
                          {
                            "slug": "mobile_push",
                            "label": "Mobile Push",
                            "enabled": true
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          {
            "$ref": "#/components/parameters/x_magicbell_user_external_id_header"
          },
          {
            "$ref": "#/components/parameters/x_magicbell_user_email_header"
          },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" }
        ],
        "tags": ["User notification preference APIs"],
        "summary": "Update user notification preferences",
        "description": "Update a user's notification preferences. These preferences will be applied only to channels you enabled for your project.",
        "operationId": "put-preferences",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WrappedNotificationPreferences"
              },
              "example": {
                "notification_preferences": {
                  "categories": [
                    {
                      "slug": "billing",
                      "channels": [
                        { "slug": "email", "enabled": false },
                        { "slug": "web_push", "enabled": false }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrappedNotificationPreferences"
                },
                "example": {
                  "notification_preferences": {
                    "categories": [
                      {
                        "slug": "billing",
                        "label": "Billing",
                        "channels": [
                          {
                            "slug": "email",
                            "label": "Email",
                            "enabled": false
                          },
                          {
                            "slug": "web_push",
                            "label": "Web Push",
                            "enabled": false
                          },
                          {
                            "slug": "mobile_push",
                            "label": "Mobile Push",
                            "enabled": false
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "no_user_with_provided_email",
                      "message": "A user with the email was not found in project with this API key"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/push_subscriptions": {
      "post": {
        "tags": ["Subscription to push notifications APIs"],
        "summary": "Register a device",
        "operationId": "create-push-subscription",
        "description": "Register a device token for push notifications.\n\nPlease keep in mind that mobile push notifications will be delivered to this device only if the channel is configured and enabled.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          {
            "$ref": "#/components/parameters/x_magicbell_user_external_id_header"
          },
          {
            "$ref": "#/components/parameters/x_magicbell_user_email_header"
          },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WrappedPushSubscription"
              },
              "example": {
                "push_subscription": {
                  "device_token": "x4doKe98yEZ21Kum2Qq39M3b8jkhonuIupobyFnL0wJMSWAZ8zoTp2dyHgV",
                  "platform": "ios"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "push_subscription": {
                      "$ref": "#/components/schemas/CreatedPushSubscription"
                    }
                  }
                },
                "example": {
                  "push_subscription": {
                    "id": "f80a7574-b309-4395-bb26-c503fe697d52",
                    "device_token": "x4doKe98yEZ21Kum2Qq39M3b8jkhonuIupobyFnL0wJMSWAZ8zoTp2dyHgV",
                    "platform": "ios"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "description": "List of validation errors"
                    }
                  }
                },
                "example": {
                  "errors": [
                    { "message": "Param 'push_subscription.device_token' is missing" },
                    { "message": "Param 'push_subscription.platform' is missing" }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/push_subscriptions/{device_token}": {
      "delete": {
        "tags": ["Subscription to push notifications APIs"],
        "summary": "Unregister a device",
        "description": "Remove the subscription of a device to mobile push notifications. The device will be discarded immediately.",
        "operationId": "delete-push-subscription",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          {
            "$ref": "#/components/parameters/x_magicbell_user_external_id_header"
          },
          {
            "$ref": "#/components/parameters/x_magicbell_user_email_header"
          },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" },
          {
            "in": "path",
            "name": "device_token",
            "description": "Token of the device you want to remove",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "Subscription delete successfully" },
          "404": {
            "description": "The device token was not registered",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "No subscription with the provided device token was found"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspace_id}/projects": {
      "post": {
        "tags": ["Projects management"],
        "summary": "Create a project in a workspace",
        "description": "Creates a project in a workspace.\n\nThis feature is available to <a href=\"https://www.magicbell.com/pricing\">Enterprise customers</a> â€” get in touch with us, and we'll provide the credentials for you.",
        "operationId": "create-project",
        "parameters": [
          { "$ref": "#/components/parameters/authorization_header" },
          { "$ref": "#/components/parameters/workspace_id" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectBody" },
              "example": {
                "project": {
                  "name": "Project name",
                  "hmac_enabled": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrappedProject"
                },
                "example": {
                  "project": {
                    "id": 13,
                    "name": "Project name",
                    "hmac_enabled": false,
                    "api_key": "[API_KEY]",
                    "api_secret": "[API_SECRET]",
                    "workspace": {
                      "id": 8,
                      "title": "Magicbell's Workspace"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The token is not valid",
            "content": {
              "application/json": {
                "example": {
                  "errors": [{ "code": "forbidden" }]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Projects management"],
        "summary": "Fetch all projects in a workspace",
        "operationId": "get-projects",
        "parameters": [
          { "$ref": "#/components/parameters/authorization_header" },
          { "$ref": "#/components/parameters/workspace_id" }
        ],
        "responses": {
          "200": {
            "description": "Projects listed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Projects"
                },
                "example": {
                  "projects": [
                    {
                      "id": 13,
                      "name": "Project name",
                      "hmac_enabled": false,
                      "api_key": "[API_KEY]",
                      "api_secret": "[API_SECRET]",
                      "workspace": {
                        "id": 8,
                        "title": "Magicbell's Workspace"
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The token is not valid",
            "content": {
              "application/json": {
                "example": {
                  "errors": [{ "code": "forbidden" }]
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspace_id}/projects/{project_id}": {
      "get": {
        "tags": ["Projects management"],
        "summary": "Fetch a project in a workspace",
        "description": "This feature is available to <a href=\"https://www.magicbell.com/pricing\">Enterprise customers</a> â€” get in touch with us, and we'll provide the credentials for you.",
        "operationId": "get-project",
        "parameters": [
          { "$ref": "#/components/parameters/authorization_header" },
          { "$ref": "#/components/parameters/workspace_id" },
          { "$ref": "#/components/parameters/project_id" }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrappedProject"
                },
                "example": {
                  "project": {
                    "id": 13,
                    "name": "Project name",
                    "hmac_enabled": false,
                    "api_key": "[API_KEY]",
                    "api_secret": "[API_SECRET]",
                    "workspace": {
                      "id": 8,
                      "title": "Magicbell's Workspace"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The token is not valid",
            "content": {
              "application/json": {
                "example": {
                  "errors": [{ "code": "forbidden" }]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Projects management"],
        "summary": "Update a project in a workspace",
        "description": "Updates a project in a workspace.\n\nThis feature is available to <a href=\"https://www.magicbell.com/pricing\">Enterprise customers</a> â€” get in touch with us, and we'll provide the credentials for you.",
        "operationId": "update-project",
        "parameters": [
          { "$ref": "#/components/parameters/authorization_header" },
          { "$ref": "#/components/parameters/workspace_id" },
          { "$ref": "#/components/parameters/project_id" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectBody" },
              "example": {
                "project": {
                  "name": "Project name",
                  "hmac_enabled": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WrappedProject"
                },
                "example": {
                  "project": {
                    "id": 13,
                    "name": "Project name",
                    "hmac_enabled": false,
                    "api_key": "[API_KEY]",
                    "api_secret": "[API_SECRET]",
                    "workspace": {
                      "id": 8,
                      "title": "Magicbell's Workspace"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The token is not valid",
            "content": {
              "application/json": {
                "example": {
                  "errors": [{ "code": "forbidden" }]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Projects management"],
        "summary": "Delete a project in a workspace",
        "description": "Deletes a project in a workspace.\n\nThis feature is available to <a href=\"https://www.magicbell.com/pricing\">Enterprise customers</a> â€” get in touch with us, and we'll provide the credentials for you.",
        "operationId": "delete-project",
        "parameters": [
          { "$ref": "#/components/parameters/authorization_header" },
          { "$ref": "#/components/parameters/workspace_id" },
          { "$ref": "#/components/parameters/project_id" }
        ],
        "responses": {
          "200": {
            "description": "Deleted project",
            "content": {
              "application/json": {
                "example": {
                  "message": "Successfully deleted project 'Project name'"
                }
              }
            }
          },
          "403": {
            "description": "The token is not valid",
            "content": {
              "application/json": {
                "example": {
                  "errors": [{ "code": "forbidden" }]
                }
              }
            }
          }
        }
      }
    },
    "/topic_subscriptions": {
      "post": {
        "operationId": "update-topic-subscription",
        "tags": ["Subscription API"],
        "summary": "Update a user's topic subscription status",
        "description": "Set a user's subscription status to subscribed or unsubscribed for a particular subscription topic.",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          { "$ref": "#/components/parameters/x_magicbell_user_external_id_header" },
          { "$ref": "#/components/parameters/x_magicbell_user_email_header" },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TopicSubscriptionBody" },
              "example": {
                "topic_subscription": {
                  "subscribed": false,
                  "subscription": "acme-inc.orders.1234"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "topic_subscription": {
                      "$ref": "#/components/schemas/UpdatedTopicSubscription"
                    }
                  }
                },
                "example": {
                  "topic_subscription": {
                    "subscribed": false,
                    "subscription": "acme-inc.orders.1234"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "description": "List of validation errors"
                    }
                  }
                },
                "example": {
                  "errors": [
                    {
                      "message": "Param 'topic_subscription.subscription' is missing"
                    },
                    {
                      "message": "Param 'topic_subscription.subscribed' is missing"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/topic_subscriptions/{subscription_slug}": {
      "delete": {
        "operationId": "delete-topic-subscription",
        "tags": ["Subscription API"],
        "summary": "Delete a user's topic subscription",
        "parameters": [
          { "$ref": "#/components/parameters/x_magicbell_api_key_header" },
          { "$ref": "#/components/parameters/x_magicbell_user_external_id_header" },
          { "$ref": "#/components/parameters/x_magicbell_user_email_header" },
          { "$ref": "#/components/parameters/x_magicbell_user_hmac_header" },
          { "$ref": "#/components/parameters/subscription_slug" }
        ],
        "responses": {
          "204": { "description": "Topic subscription delete successfully" },
          "404": {
            "description": "Topic subscription not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "message": "Couldn't find a user's subscription matching the criteria"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "x_magicbell_api_key_header": {
        "in": "header",
        "name": "X-MAGICBELL-API-KEY",
        "schema": { "type": "string" },
        "required": true,
        "description": "The (public) API key of your MagicBell project."
      },
      "x_magicbell_api_secret_header": {
        "in": "header",
        "name": "X-MAGICBELL-API-SECRET",
        "schema": { "type": "string" },
        "required": true,
        "description": "The API secret of your MagicBell project."
      },
      "x_magicbell_user_email_header": {
        "in": "header",
        "name": "X-MAGICBELL-USER-EMAIL",
        "schema": { "type": "string" },
        "description": "Email address of the user. Provide the X-MAGICBELL-USER-EXTERNAL-ID header instead if you identify users by ID."
      },
      "x_magicbell_user_external_id_header": {
        "in": "header",
        "name": "X-MAGICBELL-USER-EXTERNAL-ID",
        "schema": { "type": "string" },
        "description": "ID of the user. Provide the X-MAGICBELL-USER-EMAIL header instead if you identify users by email."
      },
      "x_magicbell_user_hmac_header": {
        "in": "header",
        "name": "X-MAGICBELL-USER-HMAC",
        "schema": { "type": "string" },
        "description": "HMAC calculated with the API secret and ID, or email, of the user. Required if the project has HMAC enabled."
      },
      "authorization_header": {
        "in": "header",
        "name": "Authorization",
        "schema": { "type": "string" },
        "required": true,
        "description": "The Bearer JWT token of your MagicBell user."
      },
      "notification_id": {
        "in": "path",
        "name": "notification_id",
        "schema": { "type": "string" },
        "required": true,
        "description": "ID of the user notification.\nThe ID of a user notification can be obtained from the \"Fetch user notifications\" API endpoint or from push events sent to the MagicBell React library.\n"
      },
      "subscription_slug": {
        "in": "path",
        "name": "subscription_slug",
        "schema": { "type": "string" },
        "required": true,
        "description": "The slug of the Subscription."
      },
      "workspace_id": {
        "in": "path",
        "name": "workspace_id",
        "description": "ID of the workspace",
        "required": true,
        "schema": { "type": "string" }
      },
      "project_id": {
        "in": "path",
        "name": "project_id",
        "description": "ID of the project",
        "required": true,
        "schema": { "type": "string" }
      }
    },
    "schemas": {
      "CategoryChannels": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "The label of the channel"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the channel."
          },
          "enabled": {
            "type": "string",
            "description": "The slug of the channel."
          }
        }
      },
      "NotificationPreferencesChannels": {
        "type": "array",
        "items": { "$ref": "#/components/schemas/CategoryChannels" }
      },
      "NotificationPreferencesCategory": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "The label of the category"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the category."
          },
          "channels": {
            "$ref": "#/components/schemas/NotificationPreferencesChannels",
            "description": "Preferences for each channel for this category."
          }
        }
      },
      "NotificationPreferencesCategories": {
        "type": "array",
        "items": { "$ref": "#/components/schemas/NotificationPreferencesCategory" }
      },
      "NotificationPreferences": {
        "type": "object",
        "properties": {
          "categories": {
            "$ref": "#/components/schemas/NotificationPreferencesCategories"
          }
        }
      },
      "WrappedNotificationPreferences": {
        "type": "object",
        "properties": {
          "notification_preferences": {
            "$ref": "#/components/schemas/NotificationPreferences"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "external_id": {
            "type": "string",
            "description": "A unique string that MagicBell can utilize to identify the user uniquely. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable.",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "description": "The user's email.",
            "maxLength": 255
          },
          "first_name": {
            "type": "string",
            "description": "The user's first name.",
            "maxLength": 50
          },
          "last_name": {
            "type": "string",
            "description": "The user's last name.",
            "maxLength": 50
          },
          "custom_attributes": {
            "type": "object",
            "description": "Any customer attributes that you'd like to associate with the user. You may want to use these attributes later when writing email templates, for example.",
            "maxLength": 6000
          },
          "phone_numbers": {
            "type": "array",
            "description": "An array of phone numbers to use for sending SMS notifications.",
            "maxItems": 50
          }
        }
      },
      "WrappedUser": {
        "type": "object",
        "properties": { "user": { "$ref": "#/components/schemas/User" } }
      },
      "Recipient": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The user's email"
          },
          "external_id": {
            "type": "string",
            "description": "A unique string that MagicBell can utilize to uniquely identify the user. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable."
          },
          "matches": {
            "type": "string",
            "description": "An SQL-like expression to match users by their stored attributes. Set it to \"*\" to send a notification to all users."
          }
        }
      },
      "Recipients": {
        "type": "array",
        "items": { "$ref": "#/components/schemas/Recipient" }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the notification.",
            "nullable": false,
            "maxLength": 255
          },
          "content": {
            "type": "string",
            "description": "Content of the notification. If you provide HTML content, the notification inbox will render it correctly. It should not exceed 4MB.",
            "nullable": true
          },
          "action_url": {
            "type": "string",
            "format": "url",
            "description": "A URL to redirect the user to when they click the notification in their notification inbox.",
            "nullable": true,
            "maxLength": 2048
          },
          "recipients": {
            "$ref": "#/components/schemas/Recipients",
            "description": "Users to send the notification to. You can specify up to 1000 users at once. Use matches to send a notification to everyone.",
            "nullable": false,
            "minItems": 1,
            "maxItems": 1000
          },
          "custom_attributes": {
            "type": "object",
            "description": "Set of key-value pairs that you can attach to a notification, 6KB at maximum. It accepts objects for the value of a key.\n\nYou can use it to share data between channels or to render a custom UI.",
            "nullable": true,
            "additionalProperties": true,
            "maxLength": 6000
          },
          "category": {
            "type": "string",
            "description": "Category the notification belongs to. This is useful to allow users to set their preferences.",
            "nullable": true,
            "maxLength": 100
          },
          "topic": {
            "type": "string",
            "description": "Topic the notification belongs to. This is useful to create threads.",
            "nullable": true,
            "maxLength": 100
          },
          "overrides": {
            "type": "object",
            "description": "Optional overrides to configure notifications per target destination.",
            "nullable": true,
            "properties": {
              "channels": {
                "type": "object",
                "description": "Overrides for specific channels",
                "properties": {
                  "in_app": {
                    "$ref": "#/components/schemas/ChannelOverrides"
                  },
                  "email": {
                    "$ref": "#/components/schemas/ChannelOverrides"
                  },
                  "web_push": {
                    "$ref": "#/components/schemas/ChannelOverrides"
                  },
                  "mobile_push": {
                    "$ref": "#/components/schemas/ChannelOverrides"
                  }
                }
              },
              "providers": {
                "type": "object",
                "description": "Overrides for specific providers (Sendgrid, Postmark, APNs, etc)",
                "properties": {
                  "sendgrid": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can pass on to Sendgrid. Applied only if it is configured for your project."
                  },
                  "mailgun": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can pass on to Mailgun. Applied only if it is configured for your project."
                  },
                  "postmark": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can pass on to Postmark. Applied only if it is configured for your project."
                  },
                  "ios": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can pass on to APNs. Applied only if it is configured for your project."
                  },
                  "android": {
                    "type": "object",
                    "description": "Set of key-value pairs that you can pass on to FCM. Applied only if it is configured for your project."
                  }
                }
              }
            }
          }
        },
        "required": ["title", "recipients"]
      },
      "ChannelOverrides": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Overriden title for this channel"
          },
          "content": {
            "type": "string",
            "description": "Overriden content for this channel"
          },
          "action_url": {
            "type": "string",
            "description": "Overriden action_url for this channel"
          }
        }
      },
      "WrappedNotification": {
        "type": "object",
        "properties": {
          "notification": { "$ref": "#/components/schemas/Notification" }
        }
      },
      "TopicSubscriptionBody": {
        "type": "object",
        "properties": {
          "topic_subscription": {
            "type": "object",
            "properties": {
              "subscription": {
                "type": "string",
                "description": "The slug of the subscription to be updated"
              },
              "subscribed": {
                "type": "boolean",
                "description": "Whether the user should be subscribed/unsubscribed"
              }
            }
          }
        },
        "required": ["subscription", "subscribed"]
      },
      "UpdatedTopicSubscription": {
        "type": "object",
        "properties": {
          "subscribed": {
            "type": "boolean",
            "description": "Whether the user should be subscribed/unsubscribed"
          },
          "user": { "$ref": "#/components/schemas/SubscriptionUser" },
          "subscription": { "$ref": "#/components/schemas/Subscription" }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Whether the user should be subscribed/unsubscribed"
          },
          "slug": {
            "type": "string",
            "description": "Whether the user should be subscribed/unsubscribed"
          },
          "topic": {
            "type": "string",
            "description": "Whether the user should be subscribed/unsubscribed"
          }
        }
      },
      "SubscriptionUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Whether the user should be subscribed/unsubscribed"
          },
          "id": {
            "type": "string",
            "description": "Whether the user should be subscribed/unsubscribed"
          }
        }
      },
      "ProjectBody": {
        "type": "object",
        "properties": {
          "project": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Project Name",
                "nullable": true,
                "maxLength": 255
              },
              "hmac_enabled": {
                "type": "boolean",
                "description": "True when hmac is enabled for a project"
              }
            }
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "description": "Project Name",
            "nullable": true,
            "maxLength": 255
          },
          "hmac_enabled": {
            "type": "boolean",
            "description": "True when hmac is enabled for a project"
          },
          "api_key": {
            "type": "string",
            "description": "Project's api_key"
          },
          "api_secret": {
            "type": "string",
            "description": "Project's api_secret"
          },
          "workspace": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "title": {
                "type": "string",
                "description": "Workspace's title"
              }
            }
          }
        }
      },
      "Projects": {
        "type": "object",
        "properties": {
          "projects": {
            "type": "array",
            "description": "List of all projects in a workspace",
            "items": { "$ref": "#/components/schemas/Project" }
          }
        }
      },
      "WrappedProject": {
        "type": "object",
        "properties": {
          "project": { "$ref": "#/components/schemas/Project" }
        }
      },
      "NotificationBroadcast": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "description": "Overriden action_url" },
          "recipients": {
            "description": "Recipients of the notification",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Recipient" }
          },
          "category": {
            "type": "string",
            "description": "Category the notification belongs to"
          },
          "topic": {
            "type": "string",
            "description": "Topic the notification belongs to"
          },
          "content": {
            "type": "string",
            "description": "Content of the notification"
          },
          "action_url": {
            "type": "string",
            "format": "url",
            "description": "A URL to redirect the user to when they click the notification in their notification inbox."
          },
          "custom_attributes": {
            "type": "object",
            "description": "Set of key-value pairs that you can attach to a notification",
            "nullable": true,
            "additionalProperties": true
          }
        },
        "required": ["title", "recipients"]
      },
      "CreatedNotificationBroadcast": {
        "type": "object",
        "properties": { "id": { "type": "string" } }
      },
      "Notifications": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "integer",
            "description": "ID of the MagicBell project these notifications belong to.",
            "readOnly": true
          },
          "total": {
            "type": "integer",
            "description": "Total number of notifications for this user.",
            "readOnly": true
          },
          "per_page": {
            "type": "integer",
            "description": "Number of notifications per page.",
            "readOnly": true
          },
          "total_pages": {
            "type": "integer",
            "description": "Total number of pages.",
            "readOnly": true
          },
          "current_page": {
            "type": "integer",
            "description": "Number of the page returned.",
            "readOnly": true
          },
          "unseen_count": {
            "type": "integer",
            "description": "Number of unseen notifications. Any filters applied affect this number.",
            "readOnly": true
          },
          "unread_count": {
            "type": "integer",
            "description": "Number of unread notifications. Any filters applied affect this number.",
            "readOnly": true
          },
          "notifications": {
            "type": "array",
            "description": "List of all notifications in the current page",
            "items": { "$ref": "#/components/schemas/Notification" }
          }
        }
      },
      "WrappedPushSubscription": {
        "type": "object",
        "properties": {
          "push_subscription": {
            "$ref": "#/components/schemas/PushSubscription"
          }
        }
      },
      "CreatedPushSubscription": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "device_token": { "type": "string" },
          "platform": { "type": "string" }
        }
      },
      "PushSubscription": {
        "type": "object",
        "properties": {
          "device_token": {
            "type": "string",
            "description": "Token that identifies the device. This is usually generated automatically by your app once installed.",
            "maxLength": 255
          },
          "platform": {
            "type": "string",
            "description": "The platform where the device token was generated from. This value is used to determine the delivery mechanism for mobile push notifications. Either 'ios', 'android' or 'safari'.",
            "minLength": 3
          },
          "app_bundle_id": {
            "type": "string",
            "description": "The bundle ID of your app. This value is used to determine the delivery mechanism for mobile push notifications based on your workflow so that you can link several mobile applications to one project.",
            "maxLength": 155
          }
        },
        "required": ["device_token", "platform"]
      }
    }
  },
  "x-explorer-enabled": false,
  "x-proxy-enabled": true,
  "x-samples-enabled": true,
  "x-samples-languages": ["curl", "node", "javascript", "ruby", "python"],
  "x-si-base": "./api_docs.yml",
  "x-github-repo": "magicbell-io/backend",
  "x-github-sha": "57802f402dea96ee7d34833e4cd17733de299aef"
}
